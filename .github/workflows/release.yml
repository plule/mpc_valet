name: Release

on:
  release:
    types: [created]

jobs:
  release_binary:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-pc-windows-gnu, x86_64-unknown-linux-musl]
    steps:
      - uses: actions/checkout@master
      - name: Build deps
        run: sudo apt-get update && sudo apt-get install -y libatk1.0-dev libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev
      - uses: Swatinem/rust-cache@v1
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: "README.md"

  release_web:
    name: release web
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build deps
      run: sudo apt-get update && sudo apt-get install -y libatk1.0-dev libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev
    - uses: Swatinem/rust-cache@v1
    - name: Install wasm bindgen
      uses: baptiste0928/cargo-install@v1
      with:
        crate: wasm-bindgen-cli
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown
    - name: Build for web
      run: cargo build --release --lib --target wasm32-unknown-unknown
    - name: Wasm bindgen
      run: wasm-bindgen --out-dir ./docs/ --no-modules --no-typescript ./target/wasm32-unknown-unknown/release/mpc_valet.wasm
    - name: Deploy to github pages
      uses: JamesIves/github-pages-deploy-action@v4.3.0
      with:
        branch: gh-pages
        folder: docs
  
  #release_crate:
  #  name: release crate
  #  runs-on: ubuntu-latest
  #  steps:
  #  - uses: actions/checkout@v3
  #  - uses: Swatinem/rust-cache@v1
  #  
  #  - name: Build deps
  #    run: sudo apt-get update && sudo apt-get install -y libatk1.0-dev libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev
  #  - name: Publish crate
  #    run: cargo publish
  #    env:
  #      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
